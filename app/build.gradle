apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE.md'
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.intellisrc.mobiledeveloperchallenge"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    // data binding
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:support-annotations:${supportLibVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    implementation "android.arch.lifecycle:extensions:${androidArchitectureVersion}"
    implementation "com.android.support.constraint:constraint-layout:${constraintVersion}"
    // firebase
    implementation "com.google.firebase:firebase-messaging:${firebaseMessagingVersion}"
    // unit test
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    androidTestImplementation "org.mockito:mockito-android:${mockitoVersion}"
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinReflectVersion}"
    // Dagger 2
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compileOnly "javax.annotation:jsr250-api:${jsr250Version}"
    implementation "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-android-processor:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    implementation "com.google.dagger:dagger-android-support:${daggerVersion}"
    // leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}"
    // RxJava
    implementation "io.reactivex.rxjava3:rxjava:${rxJavaVersion}"
    implementation "io.reactivex.rxjava3:rxandroid:${rxAndroidVersion}"
    // Gson
    implementation "com.google.code.gson:gson:${gsonVersion}"
    // Websocket
    implementation "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}"
    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel:${lifecycleViewModel}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleViewModel}"
    // room
    kapt "androidx.room:room-compiler:${androidXRoomVersion}"
    implementation "androidx.room:room-runtime:${androidXRoomVersion}"
    implementation "android.arch.persistence.room:rxjava2:${roomVersion}"
    // Timber
    implementation "com.jakewharton.timber:timber:${timberVersion}"
    // Navigation
    implementation "android.arch.navigation:navigation-ui:${navigationVersion}"
    implementation "android.arch.navigation:navigation-fragment:${navigationVersion}"
    // view pager indicator
    implementation "com.github.JakeWharton:ViewPagerIndicator:${viewPagerIndicatorVersion}"
    // androidx
    implementation "androidx.core:core-ktx:${coreKtxVersion}"
    implementation "androidx.recyclerview:recyclerview:${androidxVersion}"
    // tooltip
    implementation "com.github.douglasjunior:android-simple-tooltip:${tooltipVersion}"
    // simple-stack
    implementation "com.github.Zhuinden:simple-stack:${simpleStackVersion}"
    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${lifecycleVersion}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVersion}"
    // butterKnife
    implementation "com.jakewharton:butterknife:${butterKnifeVersion}"
    kapt "com.jakewharton:butterknife-compiler:${butterKnifeVersion}" // annotationProcessor
    // auto-value
    kapt "com.google.auto.value:auto-value:${autoValueVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"
    // paperparcel
    kapt "com.google.android:android:4.1.1.4"
    kapt "nz.bradcampbell:paperparcel-compiler:${paperParcelVersion}"
    implementation "nz.bradcampbell:paperparcel:${paperParcelVersion}"
    implementation "nz.bradcampbell:paperparcel-api:${paperParcelVersion}"
    implementation "nz.bradcampbell:paperparcel-kotlin:${paperParcelVersion}"
    kapt "com.github.reggar:auto-value-ignore-hash-equals:${autoValueIgnoreHashVersion}" // annotationProcessor
    // kotlinX
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${kotlinXVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${kotlinXVersion}"
    implementation "androidx.fragment:fragment-ktx:${fragmentKTXVersion}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${liveDataKtxVersion}"
    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:${retrofit2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2Version}"
    implementation "androidx.multidex:multidex:${multiDexVersion}"
    // test
    kaptTest "com.google.auto.value:auto-value:${autoValueVersion}"
}
